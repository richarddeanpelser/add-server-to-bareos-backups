---
# All variables needed to run this playbook or project

# Ansible is flexible and there are many ways you can choose to place variables for the playbooks and roles they run. My preference is to keep any desired default values in their place in the playbooks or roles, but have one file to edit where required variables can be placed and/or default values overridden. My chosen pattern is to create this file for any playbook/project and place the required and desired variables here. This gives: a central place to edit needed values, the highest level of variable precedence and no need to re-pass variables when importing other playbooks into this project since variables placed here are also global in scope. To achieve this when running the playbook/project we will pass this file as parameter like so:
# ansible-playbook master.yml -e @vars/all_vars.yml -i hosts/production


#####     Required Variables      #####


#####   Role - setup-mysql-backups   #####

# List of databases to backup
dbs_to_backup: 
  - "business"

# MySQL / MariaDB root password
mysql_root_password: ""


#####   Role - install-bareos-client    #####

# The Bareos Director password for the Bareos File Daemon service being installed. This should be a very long string (47 characters is the default) and must match the applicable records 
client_password: "Some very long string password here"


#####   Role - add-job-to-bareos-director    #####

# The hostname of the machine you are backing up
host_name: "To Be Filled In"

# The fully qualified domain name or IP address of the machine you are adding to be backed up
server_fqdn: "To Be Filled In"

# The fully qualified domain name or IP address of where your Bareos Storage Daemon/Service is running. For most people this will probably be the same FQDN of where the Bareos Director daemon/service runs (your Bareos Server), but can be a separate machine.
bareos_storage_daemon_fqdn: "To Be Filled In"

# It needs to match the client_password entered when adding the bareos client program to the machine you want to backup. The value for this is usually a very long string (47 characters) of random characters.
client_password: "To Be Filled In"
# The storage director password variable is the bareos-dir password found on your Bareos Server
storage_director_password: "{{ lookup('env', 'BAREOS_STORAGE_PASSWORD') }}"


# Backup Level - Full, Incremental, Differential
# Incremental - all ﬁles changed since the last Full, Diﬀerential, or Incremental backup started
# Diﬀerential - all ﬁles speciﬁed in the FileSet that have changed since the last successful *Full* backup will be backed up
# Full - all ﬁles in the FileSet whether or not they have changed will be backed up
level: Incremental

# Permits you to control the order in which your jobs will be run. The higher the number, the lower the job priority. 
priority: 6

# See the README documentation for more detailed info on these variables
backup_schedule:
  - Run = Full sun at 02:00
  - Run = Incremental mon-sat at 02:00

archive_device: "/z-storage/backups/{{ host_name }}"

filesets_to_backup:
  - File = "/var/www/html"
  - File = "/etc/apache2"
  - File = "/backups/mysql/current"
filesets_to_exclude:
  - File = "/var/www/html/.github"
  - File = "/var/www/html/.git"
  - File = "/var/www/html/.gitignore"


#####     Optional Variables      #####

# These variables are set with the below defaults in defaults/main.yml. 
# Only uncomment and change them or pass values if you would like

#backup_name: "{{ host_name }} Backup"

# Individual File Records Storage Length - affects browsing files in GUI
#file_retention: 90 days
# Job Records in the DB - how long to store info about backups
#job_retention: 6 months


# How long to actually store the backup files
#volume_retention_full: 12 months
# Maximum size of each backup volume/file
#maximum_volume_bytes_full: 10G
# Limit number of Volumes in Pool
#maximum_volumes_full: 10

# How long to actually store the backup files
#volume_retention_incremental: 12 months
# Maximum size of each backup volume/file
#maximum_volume_bytes_incremental: 10G
# Limit number of Volumes in Pool
#maximum_volumes_incremental: 10


#####   Role - 4 vars    #####



